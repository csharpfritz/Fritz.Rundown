@page
@model Fritz.StreamTools.Pages.AdminModel
@{ 
	var items = Model.Repository.Get();
	var title = Model.Repository.GetTitle();
}
<!DOCTYPE html>
<html>
<head>
	<title>Rundown for the Stream</title>
	<style>
		ul { margin-left: 0px; padding-left: 0px; }
		li { list-style-type: none; margin-left: 0px; padding-left: 0px;}
		.itemText { width:500px; }
	</style>
</head>
<body>
	<button onclick="onEditClick()">edit</button>
	@*<input class="title" type="text" value="@title"/>*@
	<h2 id="title" class="title">@title</h2>	
	<ul>
	@foreach (var item in items)
	{
		<li id="@item.ID">
			<input type="checkbox" 
					 checked="@item.IsCompleted" 
					 name="item_@item.ID" class="checkItem" />
			<text class="itemText">@item.Text</text>
			@*<input class="itemText" type="text" value="@item.Text"/>*@
		</li>
	}
	</ul>

	<script src="~/lib/jquery.js"></script>
	<script type="text/javascript"><!--

		function titleChange() {
				var title = $(this);
				console.log(title);
				console.log(title.val());
				$.ajax({
					method: 'PUT',
					url: '/api/rundown/title',
					data: JSON.stringify(title.val()),
					dataType: 'json',
					contentType: 'text/json'
				});
		}

		function itemTextChange() {
				var text = $(this);
				var thisListItem = text.parent();
				var itemToUpdate = {
					ID: thisListItem.attr("id"),
					Text: text.val(),
					IsCompleted: thisListItem.children()[0].checked
				}
				console.log(text);
				console.log(thisListItem);
				console.log('This item: ');
				console.log(itemToUpdate);
				updateListItem(itemToUpdate);
		}

		$().ready(function () {

			$(".checkItem").change(function () {

				var thisItem = $(this);
				var thisListItem = thisItem.parent();
				var itemToUpdate = {
					ID: thisListItem.attr("id"),
					Text: thisListItem.children()[1].innerText,
					IsCompleted: thisItem[0].checked
				}
				
				console.log(thisItem);
				console.log(thisListItem);
				console.log('This item: ');
				console.log(itemToUpdate);
				updateListItem(itemToUpdate);

			});					

			$(".itemText").on("input", itemTextChange);
		});

		var updateListItem = function (itemToUpdate) {

				$.ajax({
					method: 'PUT',
					url: '/api/items/' + itemToUpdate.ID,
					data: JSON.stringify(itemToUpdate),
					dataType: 'json',
					contentType: 'text/json'
				});
		};
		var editState = false;
		var onEditClick = function () {
			var currentTitle = document.getElementById("title");
			var itemListTexts = document.getElementsByClassName("itemText");
			var checkboxItems = document.getElementsByClassName("checkItem");
			if (editState) {
				currentTitle.outerHTML = '<h2 id="title" class="title">' + currentTitle.value + '</h2>';
				currentTitle.removeEventListener("input", titleChange);
				for (var elem of itemListTexts) {
					elem.outerHTML = '<text class="itemText">' + elem.value + '</text>';
					elem.removeEventListener("input", itemTextChange);
				}
				for (var elem of checkboxItems) {
					elem.removeAttribute("disabled");
				}
				editState = false;
			}
			else {
				currentTitle.outerHTML = '<input id="title" type="text" value="' + currentTitle.innerText + '"/>';
				document.getElementById("title").addEventListener("input", titleChange);
				for (var elem of itemListTexts) {
					elem.outerHTML = '<input class="itemText" type="text" value="' + elem.innerText + '"/>';
				}
				itemListTexts = document.getElementsByClassName("itemText");
				for (var elem of itemListTexts) {
					elem.addEventListener("input", itemTextChange);
				};
				for (var elem of checkboxItems) {
					elem.setAttribute("disabled", "disabled");
				}
				editState = true;
			}
		};

		//--></script>
</body>
</html>
