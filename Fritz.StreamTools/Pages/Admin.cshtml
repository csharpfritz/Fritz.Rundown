@page
@model Fritz.StreamTools.Pages.AdminModel
@{ 
		var items = Model.Service.GetAllItems();
		var title = Model.Service.GetRundownTitle();
}
<!DOCTYPE html>
<html>
<head>
	<title>Rundown for the Stream</title>
	<style>
		ul {
			margin-left: 0px;
			padding-left: 0px;
		}

		li {
			list-style-type: none;
			margin-left: 0px;
			padding-left: 0px;
		}

		.itemText {
			width: 500px;
		}

		.title {
			margin-top: 20px;
			margin-bottom: 10px;
			font-size: 30px;
			font-weight: 500;
		}

		.main {
			margin-top: 20px;
		}

		.listItem{
			padding-top: 5px;
			padding-bottom: 5px;
		}
	</style>
	<link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
	<link href="~/lib/bootstrap/dist/css/bootstrap-theme.css" rel="stylesheet" />
</head>
<body>
	<div class="main container">
		<button onclick="onEditClick()">edit</button>
		<br />
		<h2 id="title" class="title">@title</h2>
		<ul id="itemsList">
			@foreach (var item in items)
			{
				<li id="@item.ID">
				<input type="checkbox"
								checked="@item.IsCompleted"
								name="item_@item.ID" class="checkItem" />
				<text class="itemText">@item.Text</text>
				</li>
			}
		</ul>
		<button id="btnAdd" onclick="onAddItemClick()" hidden>Add</button>
	</div>
	<script src="~/lib/jquery.js"></script>
	<script type="text/javascript"><!--

		function titleChange() {
				var title = $(this);
				console.log(title);
				console.log(title.val());
				$.ajax({
					method: 'PUT',
					url: '/api/rundown/title',
					data: JSON.stringify(title.val()),
					dataType: 'json',
					contentType: 'text/json'
				});
		}

		function itemTextChange() {
				var text = $(this);
				var thisListItem = text.parent();
				var itemToUpdate = {
					ID: thisListItem.attr("id"),
					Text: text.val(),
					IsCompleted: thisListItem.children()[0].checked
				}
				console.log(text);
				console.log(thisListItem);
				console.log('This item: ');
				console.log(itemToUpdate);
				updateListItem(itemToUpdate);
		}

		function checkItemChange() {
				var thisItem = $(this);
				var thisListItem = thisItem.parent();
				var itemToUpdate = {
					ID: thisListItem.attr("id"),
					Text: thisListItem.children()[1].innerText,
					IsCompleted: thisItem[0].checked
				}
				
				console.log(thisItem);
				console.log(thisListItem);
				console.log('This item: ');
				console.log(itemToUpdate);
				updateListItem(itemToUpdate);
		}

		function deleteItem() {
			var thisItem = $(this);
			var thisListItem = thisItem.parent();
			var id = thisListItem.attr("id");
			$.ajax({
					method: 'DELETE',
					url: '/api/items/' + id,
					contentType: 'text/json'
			}).done(function(){
				$(thisListItem).remove();
			}
			)

		}

		$().ready(function () {

			$(".checkItem").change(checkItemChange);					

			$(".itemText").on("input", itemTextChange);
		});

		var updateListItem = function (itemToUpdate) {

				$.ajax({
					method: 'PUT',
					url: '/api/items/' + itemToUpdate.ID,
					data: JSON.stringify(itemToUpdate),
					dataType: 'json',
					contentType: 'text/json'
				});
		};
		var editState = false;
		var onEditClick = function () {
			var currentTitle = document.getElementById("title");
			var itemListTexts = document.getElementsByClassName("itemText");
			var checkboxItems = document.getElementsByClassName("checkItem");
			var addButton = document.getElementById("btnAdd");
			if (editState) {
				currentTitle.outerHTML = '<h2 id="title" class="title">' + currentTitle.value + '</h2>';
				currentTitle.removeEventListener("input", titleChange);
				for (var elem of itemListTexts) {
					elem.outerHTML = '<text class="itemText">' + elem.value + '</text>';
					elem.removeEventListener("input", itemTextChange);
				}
				for (var elem of checkboxItems) {
					elem.removeAttribute("disabled");
				}
				editState = false;
				addButton.setAttribute("hidden", "hidden");
				$(".deleteItem").each(function (index, element) {
					$(element).remove();
				});
				$(".listItem").each(function (index, element) {
					$(element).removeClass("listItem");
				});
			}
			else {
				currentTitle.outerHTML = '<input id="title" type="text" class="title" value="' + currentTitle.innerText + '"/>';
				document.getElementById("title").addEventListener("input", titleChange);
				for (var elem of itemListTexts) {
					elem.outerHTML = '<input class="itemText" type="text" value="' + elem.innerText + '"/>';
				}
				itemListTexts = document.getElementsByClassName("itemText");
				for (var elem of itemListTexts) {
					elem.addEventListener("input", itemTextChange);
				};
				for (var elem of checkboxItems) {
					elem.setAttribute("disabled", "disabled");
				}
				editState = true;
				addButton.removeAttribute("hidden");

				$("#itemsList").children().each(function (index, element) {
					$(element).addClass("listItem");
					$(element).append($('<span>', { class: 'deleteItem glyphicon glyphicon-trash' }).on("click", deleteItem));
				});
			}
		};

		var onAddItemClick = function () {
			$.ajax({
				method: 'POST',
				url: '/api/items/',
				dataType: 'json',
				contentType: 'text/json'
			}).done(function (data) {

				var spacing = `
                    `;

				var newInputNode = $('<input>', {
					type: "checkbox",
					checked: data.isCompleted,
					"disabled": "disabled",
					name: "item_" + data.id,
					class: "checkItem"
				});

				var newTextNode = $('<input>', {
					type: "text",
					value: data.text,
					class: "itemText"
				});

				var newItemNode = $('<li>', {
					id: data.id
				}).append(spacing).append(newInputNode).append(spacing).append(newTextNode);

				$("#itemsList").append(newItemNode);
				$(newTextNode).on("input", itemTextChange);
				$(newInputNode).change(checkItemChange);
			});
		};

		//--></script>
</body>
</html>
