@page
@model Fritz.StreamTools.Pages.SentimentModel
@{
}
<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title>Sentiment</title>
	@*<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.1.0/css/solid.css" integrity="sha384-TbilV5Lbhlwdyc4RuIV/JhD8NR+BfMrvz4BL5QFa2we1hQu6wvREr3v6XSRfCTRp" crossorigin="anonymous">
		<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.1.0/css/fontawesome.css" integrity="sha384-ozJwkrqb90Oa3ZNb+yKFW2lToAWYdTiF1vt8JiH5ptTGHTGcN7qdoR1F95e0kYyG" crossorigin="anonymous">*@
	<link rel="stylesheet" href="~/css/site.css" />
	<script src="https://kit.fontawesome.com/8ac2e0bf60.js" crossorigin="anonymous"></script>
</head>
<body class="todoWidget">
	<h4></h4>
	<ul id="todos">
	</ul>


	<script src="~/lib/signalr/signalr-client.js"></script>
	<script>
		(function () {

			this._hub = new signalR.HubConnectionBuilder()
				.withUrl("/obshub")
				.withHubProtocol(new signalR.protocols.msgpack.MessagePackHubProtocol())
				.build();

			this._hub.onclose(() => {
				if (this.debug) console.debug("hub connection closed");

				// Hub connection was closed for some reason
				let interval = setInterval(() => {
					// Try to reconnect hub every 5 secs
					this.start(groups).then(() => {
						// Reconnect succeeded
						clearInterval(interval);
						if (this.debug) console.debug("hub reconnected");
					});
				}, 5000);
			});

			this._hub.on("project_update", (text) => {
				if (this.debug) console.debug(`Project update: ${text}`);
				document.querySelector("h4").textContext = text;
			});

			this._hub.on('todo_new', (id, text) => {
				if (this.debug) console.debug("New ToDo", { id, text });
				this.Add(id, text);
			});
			this._hub.on('todo_done', (id) => {
				if (this.debug) console.debug("Done ToDo", { id });
				this.Complete(id);
			});

			var todos = document.getElementById("todos");

			this.Add = function (id, text) {
				var newEl = document.createElement("li");
				newEl.setAttribute("data-id", id);
				newEl.innerHTML = `<i class="far fa-square"></i> ${text}`;
				todos.appendChild(newEl);
			}

			this.Complete = function (id) {
				var el = document.querySelector(`li[data-id='${id}'] > i`);
				el.className = "far fa-check-square";
			}

			this._hub.start();

		})();
	</script>
</body>
</html>
