@page
@model Fritz.StreamTools.Pages.SentimentModel
@{
}
<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title>ToDo Widget</title>
	<link rel="stylesheet" href="~/css/site.css" />
	<script src="https://kit.fontawesome.com/8ac2e0bf60.js" crossorigin="anonymous"></script>
</head>
<body class="todoWidget">
	<h4>Adding ToDo widget to StreamTools</h4>

	<div id="checklistContainer">
		<ul id="todos">
			@*<li><i class="far fa-square"></i> Add the feature X</li>
			<li><i class="far fa-square"></i> Fix the bug with the thing</li>
			<li><i class="far fa-square"></i> Fix the bug with the thing and all the stuff that happened that time with the issue</li>
			<li><i class="far fa-square"></i> Fix the bug with the thing and all the stuff that happened that time with the issue</li>
			<li><i class="far fa-square"></i> Fix the bug with the thing and all the stuff that happened that time with the issue</li>
			<li><i class="far fa-square"></i> Fix the bug with the thing and all the stuff that happened that time with the issue</li>
			<li><i class="far fa-square"></i> Fix the bug with the thing and all the stuff that happened that time with the issue</li>
			<li><i class="far fa-square"></i> Fix the bug with the thing and all the stuff that happened that time with the issue</li>
			<li><i class="far fa-square"></i> Fix the bug with the thing and all the stuff that happened that time with the issue</li>
			<li><i class="far fa-square"></i> Fix the bug with the thing and all the stuff that happened that time with the issue</li>*@
		</ul>
	</div>


	<script type='text/javascript' src='/lib/jquery.js'></script>
	<script type='text/javascript' src='//cdn.jsdelivr.net/jquery.marquee/1.3.1/jquery.marquee.min.js'></script>
	<script src="~/lib/signalr/signalr-client.js"></script>
	<script>

		var $mq = $("#todos");
		var debug = false;

		(function () {

			this._hub = new signalR.HubConnectionBuilder()
				.withUrl("/obshub")
				.withHubProtocol(new signalR.protocols.msgpack.MessagePackHubProtocol())
				.build();

			this._hub.onclose(() => {
				if (debug) console.debug("hub connection closed");

				// Hub connection was closed for some reason
				let interval = setInterval(() => {
					// Try to reconnect hub every 5 secs
					this.start(groups).then(() => {
						// Reconnect succeeded
						clearInterval(interval);
						if (this.debug) console.debug("hub reconnected");
					});
				}, 5000);
			});

			this._hub.on("project_update", (text) => {
				if (debug) console.debug(`Project update: ${text}`, null);
				document.querySelector("h4").innerText = text;
			});

			this._hub.on('todo_new', (id, text) => {
				if (debug) console.debug("New ToDo", { id, text });
				this.Add(id, text);
			});
			this._hub.on('todo_done', (id) => {
				if (this.debug) console.debug("Done ToDo", { id });
				this.Complete(id);
			});

			var todos = document.getElementById("todos");

			this.Add = function (id, text) {
				var newEl = document.createElement("li");
				newEl.setAttribute("data-id", id);
				newEl.innerHTML = `<i class="far fa-square"></i> ${id}. ${text}`;
				$mq.marquee('destroy');
				todos.style = "";
				todos.appendChild(newEl);
				$mq.marquee({
					duplicated: true,
					direction: 'up',
					duration: id * 1000
				});
				todos.style ="visibility: visible";
			}

			this.Complete = function (id) {
				var el = document.querySelector(`li[data-id='${id}'] > i`);
				el.className = "far fa-check-square";
			}

			this._hub.start();

		})();
	</script>
</body>
</html>
